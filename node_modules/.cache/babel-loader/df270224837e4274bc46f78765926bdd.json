{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman bohra\\\\Desktop\\\\React Application\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport Counters from './components/Counters';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 10\n      }, {\n        id: 3,\n        value: 9\n      }, {\n        id: 4,\n        value: 5\n      }]\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters: counters\n      }); // console.log(\"Delete event handler called!\",counterID);\n    };\n\n    this.handleReset = () => {\n      console.log(\"RESET called!\");\n      const counters = this.state.counters.map(count => {\n        count.value = 0;\n        return count;\n      });\n      this.setState({\n        counters: counters\n      });\n    };\n\n    this.handleIncrement = counter => {\n      // one way to do this\n      // const counters = this.state.counters.map( c => {\n      //     c.value = c.id === counterId ? c.value + 1 : c.value;\n      //     return c;\n      //  });\n      // another way to perform the same task\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDecrement = counter => {\n      // const counters = this.state.counters.map( c => {\n      //    c.value = c.id === counterId ? c.value - 1 : c.value;\n      //    return c;\n      // });\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value = counters[index].value !== 0 ? counters[index].value - 1 : counters[index].value;\n      this.setState({\n        counters: counters\n      });\n    };\n\n    this.handleAddElement = () => {\n      const elements = this.state.counters.length;\n      const counters = [...this.state.counters];\n      const new_counter = {\n        id: elements + 1,\n        value: 0\n      };\n      counters.concat(new_counter);\n      console.log(\"Add element event called!\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      totalCounters: this.state.counters.filter(c => c.value > 0).length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Counters, {\n      onReset: this.handleReset,\n      onIncrement: this.handleIncrement,\n      onDecrement: this.handleDecrement,\n      onDelete: this.handleDelete,\n      onAddElement: this.handleAddElement,\n      counters: this.state.counters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/aman bohra/Desktop/React Application/react-app/src/App.js"],"names":["React","Component","NavBar","Counters","App","state","counters","id","value","handleDelete","counterId","filter","c","setState","handleReset","console","log","map","count","handleIncrement","counter","index","indexOf","handleDecrement","handleAddElement","elements","length","new_counter","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Counters from './components/Counters';\r\n\r\nclass App extends Component {\r\n    state = { \r\n        counters:[\r\n            {id:1 , value: 0},\r\n            {id:2 , value: 10},\r\n            {id:3 , value: 9},\r\n            {id:4 , value: 5},\r\n        ]   \r\n    }\r\n\r\n    handleDelete = (counterId) =>{\r\n        const counters = this.state.counters.filter(c => c.id !== counterId);\r\n        this.setState( {counters: counters} )\r\n        // console.log(\"Delete event handler called!\",counterID);\r\n    };\r\n     \r\n    handleReset = () => {\r\n        console.log(\"RESET called!\");\r\n        const counters = this.state.counters.map(count => {\r\n            count.value = 0;\r\n            return count;  \r\n        });\r\n        this.setState( {counters : counters } );\r\n    };\r\n\r\n    handleIncrement = (counter) =>{\r\n        // one way to do this\r\n        // const counters = this.state.counters.map( c => {\r\n        //     c.value = c.id === counterId ? c.value + 1 : c.value;\r\n        //     return c;\r\n        //  });\r\n\r\n\r\n        // another way to perform the same task\r\n        const counters = [...this.state.counters];\r\n        const index = counters.indexOf(counter);\r\n        counters[index] = {...counter};\r\n        counters[index].value++;\r\n\r\n\r\n        this.setState( {counters} );\r\n    };\r\n\r\n    handleDecrement = (counter) =>{\r\n        // const counters = this.state.counters.map( c => {\r\n        //    c.value = c.id === counterId ? c.value - 1 : c.value;\r\n        //    return c;\r\n        // });\r\n        const counters = [...this.state.counters];\r\n        const index = counters.indexOf(counter);\r\n        counters[index] = {...counter};\r\n        counters[index].value = counters[index].value !== 0 ? counters[index].value - 1 : counters[index].value;\r\n        this.setState( {counters : counters } );\r\n    };\r\n\r\n    handleAddElement = () =>{\r\n        const elements = this.state.counters.length;\r\n        const counters = [...this.state.counters];\r\n        const new_counter = {\r\n            id : elements+1,\r\n            value : 0\r\n        }\r\n        counters.concat(new_counter);\r\n        console.log(\"Add element event called!\");\r\n    };\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <NavBar totalCounters = {this.state.counters.filter(c => c.value > 0 ).length} />\r\n                <main className=\"container\">\r\n                    <Counters\r\n                        onReset = {this.handleReset}\r\n                        onIncrement = {this.handleIncrement}\r\n                        onDecrement = {this.handleDecrement}\r\n                        onDelete = {this.handleDelete}\r\n                        onAddElement = {this.handleAddElement}\r\n                        counters = {this.state.counters}\r\n                     />\r\n                </main>\r\n            </React.Fragment>    \r\n        );  \r\n    }\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman bohra\\\\Desktop\\\\React Application\\\\react-app\\\\src\\\\components\\\\Counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: this.props.value,\n      tags: ['Elemen1', 'Element2', 'Element3']\n    };\n\n    this.incrementButton = () => {\n      // this will tell react that we have changed the state\n      this.setState({\n        count: this.state.count + 1\n      }); // this.setState( {  tags : this.state.tags.concat('Element'.concat(String(this.state.count))) } );\n    };\n\n    this.decrementButton = () => {\n      this.setState({\n        count: this.state.count - 1\n      });\n    };\n  }\n\n  // instead of calling constructor function we can convert the event handler into\n  // a arrow function \n  // constructor(){\n  //     super();\n  //     this.incrementButton = this.incrementButton.bind(this);\n  // }\n  returnTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 49\n      }\n    }, \"No items to show!\");\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, this.state.tags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 49\n      }\n    }, tag)));\n  }\n\n  returnCountValue() {\n    return this.state.count === 0 ? 'Zero' : this.state.count;\n  }\n\n  render() {\n    console.log('Props ', this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"badge m-2 badge-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, this.returnCountValue()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.incrementButton,\n      className: \"btn btn-secondary m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.decrementButton,\n      className: \"btn btn-secondary m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Decrement\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/aman bohra/Desktop/React Application/react-app/src/components/Counter.jsx"],"names":["React","Component","Counter","state","count","props","value","tags","incrementButton","setState","decrementButton","returnTags","length","color","map","tag","returnCountValue","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC,KADf;AAEJC,MAAAA,IAAI,EAAG,CAAC,SAAD,EAAW,UAAX,EAAsB,UAAtB;AAFH,KADoB;;AAAA,SAkB5BC,eAlB4B,GAkBV,MAAK;AACnB;AACA,WAAKC,QAAL,CAAe;AAAEL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAf,EAFmB,CAGnB;AACH,KAtB2B;;AAAA,SAwB5BM,eAxB4B,GAwBV,MAAK;AACnB,WAAKD,QAAL,CAAe;AAAEL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAf;AACH,KA1B2B;AAAA;;AAM5B;AACA;AACA;AACA;AACA;AACA;AAEAO,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKR,KAAL,CAAWI,IAAX,CAAgBK,MAAhB,KAA2B,CAA9B,EAAiC,oBAAO;AAAM,MAAA,KAAK,EAAG;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACjC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKV,KAAL,CAAWI,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,iBAAI;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAA3B,CAAN,CAAP;AACH;;AAYDC,EAAAA,gBAAgB,GAAE;AACd,WAAO,KAAKb,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,MAAzB,GAAkC,KAAKD,KAAL,CAAWC,KAApD;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB,KAAKd,KAA1B;AAEA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAKW,gBAAL,EAAzC,CAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,KAAKR,eAAtB;AAAuC,MAAA,SAAS,EAAC,uBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,KAAKE,eAAtB;AAAuC,MAAA,SAAS,EAAC,uBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAYH;;AA/C2B;;AAkDhC,eAAeR,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = { \r\n        count : this.props.value ,\r\n        tags : ['Elemen1','Element2','Element3']\r\n    }\r\n\r\n    // instead of calling constructor function we can convert the event handler into\r\n    // a arrow function \r\n    // constructor(){\r\n    //     super();\r\n    //     this.incrementButton = this.incrementButton.bind(this);\r\n    // }\r\n\r\n    returnTags(){\r\n        if(this.state.tags.length === 0) return <span style={ {color:\"red\"} }>No items to show!</span>;\r\n        return <ul>{ this.state.tags.map(tag => <li key={tag}>{tag}</li>) }</ul>;\r\n    }\r\n\r\n    incrementButton = () =>{\r\n        // this will tell react that we have changed the state\r\n        this.setState( { count: this.state.count + 1 } );\r\n        // this.setState( {  tags : this.state.tags.concat('Element'.concat(String(this.state.count))) } );\r\n    }\r\n\r\n    decrementButton = () =>{\r\n        this.setState( { count: this.state.count - 1 } );\r\n    }\r\n\r\n    returnCountValue(){\r\n        return this.state.count === 0 ? 'Zero' : this.state.count; \r\n    }\r\n\r\n    render() { \r\n        console.log('Props ',this.props);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {/* {this.props.children} */}\r\n                <h1 className=\"badge m-2 badge-warning\">{this.returnCountValue()}</h1>\r\n                <button onClick={this.incrementButton} className=\"btn btn-secondary m-2\">Increment</button>\r\n                <button onClick={this.decrementButton} className=\"btn btn-secondary m-2\">Decrement</button>\r\n                <br/>\r\n                {/* conditional statements */}\r\n                {/* { this.state.tags.length === 0 && \"ERROR : \" } */}\r\n                {/* { this.returnTags() } */}\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman bohra\\\\Desktop\\\\React Application\\\\react-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      // rendering list\n      tags: ['tag1', 'tag2', 'tag3'] //imageUrl : 'https://picsum.photos/200'\n\n    };\n    this.styles = {\n      fontSize: 25,\n      fontWeight: \"bold\"\n    };\n  }\n\n  render() {\n    // either we can call this method and save result in var \n    // let classes = this.getBadgeClass();\n    // but instead this function can directly be called inline \n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: this.styles,\n      className: this.getBadgeClass(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, this.formatCount()), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        fontSize: 30\n      },\n      className: \"bth btn-secondary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Increment\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, this.state.tags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 50\n      }\n    }, tag))));\n  }\n\n  getBadgeClass() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/aman bohra/Desktop/React Application/react-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","styles","fontSize","fontWeight","render","getBadgeClass","formatCount","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJ;AACAC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAHF,CAIJ;;AAJI,KADoB;AAAA,SAS5BC,MAT4B,GASrB;AACHC,MAAAA,QAAQ,EAAE,EADP;AAEHC,MAAAA,UAAU,EAAE;AAFT,KATqB;AAAA;;AAc5BC,EAAAA,MAAM,GAAG;AAEL;AACA;AACA;AAEA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAM,MAAA,KAAK,EAAE,KAAKH,MAAlB;AAA0B,MAAA,SAAS,EAAE,KAAKI,aAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4D,KAAKC,WAAL,EAA5D,CAHJ,eAKI;AAAS,MAAA,KAAK,EAAG;AAACJ,QAAAA,QAAQ,EAAC;AAAV,OAAjB;AAAiC,MAAA,SAAS,EAAC,0BAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKJ,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,GAAL,CAA3B,CADN,CANJ,CADJ;AAYH;;AAEDH,EAAAA,aAAa,GAAG;AACZ,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKX,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOU,OAAP;AACH;;AAEDH,EAAAA,WAAW,GAAE;AACT,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AA3C2B;;AA8ChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        count: 0,\r\n        // rendering list\r\n        tags: ['tag1','tag2','tag3']\r\n        //imageUrl : 'https://picsum.photos/200'\r\n    };\r\n\r\n    // adding styles\r\n    styles={\r\n        fontSize: 25,\r\n        fontWeight: \"bold\"\r\n    }\r\n\r\n    render() { \r\n\r\n        // either we can call this method and save result in var \r\n        // let classes = this.getBadgeClass();\r\n        // but instead this function can directly be called inline \r\n\r\n        return ( \r\n            <React.Fragment>\r\n                {/* <img src={this.state.imageUrl} alt=\"\"/> */}\r\n                {/* adding dynamic classes and styles */}\r\n                <span style={this.styles} className={this.getBadgeClass()}>{this.formatCount()}</span> \r\n                {/* adding inline styles */}\r\n                <button  style={ {fontSize:30} } className=\"bth btn-secondary btn-sm\">Increment</button>\r\n                <ul>\r\n                    { this.state.tags.map(tag => <li>{tag}</li>) }\r\n                </ul>\r\n            </React.Fragment> \r\n        );\r\n    }\r\n\r\n    getBadgeClass() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const { count } = this.state ;\r\n        return count === 0 ? 'Zero' : count;\r\n    }\r\n}\r\n \r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}